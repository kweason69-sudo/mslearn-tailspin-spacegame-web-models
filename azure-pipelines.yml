pool:
  name: 'Default'

variables:
  buildConfiguration: 'Release'
  dotnetSdkVersion: '8.x'

steps:
- task: UseDotNet@2
  displayName: 'Use .NET SDK $(dotnetSdkVersion)'
  inputs:
    version: '$(dotnetSdkVersion)'

- task: DotNetCoreCLI@2
  displayName: 'Restore project dependencies'
  inputs:
    command: 'restore'
    projects: '**/*.csproj'

- task: DotNetCoreCLI@2
  displayName: 'Build the project - $(buildConfiguration)'
  inputs:
    command: 'build'
    arguments: '--no-restore --configuration $(buildConfiguration)'
    projects: '**/*.csproj'

- task: DotNetCoreCLI@2
  displayName: 'Pack the project - $(buildConfiguration)'
  inputs:
    command: 'pack'
    projects: '**/*.csproj'
    arguments: '--no-build --configuration $(buildConfiguration)'
    versioningScheme: byPrereleaseNumber
    majorVersion: '1'
    minorVersion: '0'
    patchVersion: '0'

- script: |
    echo "ðŸ“¦ Pushing NuGet package..."
    dotnet nuget push $(Build.ArtifactStagingDirectory)/*.nupkg \
      --source "https://pkgs.dev.azure.com/kweason69/MSLearn-SpaceGame-Dependencies/_packaging/Tailspin.SpaceGame.Web.Models/nuget/v3/index.json" \
      --api-key $ADO_PAT_NUGET
  displayName: 'Push NuGet package to Azure Artifacts'
  env:
    ADO_PAT_NUGET: $(ADO_PAT_NUGET)    

# - task: DotNetCoreCLI@2
#   displayName: 'Push NuGet package to Azure Artifacts'
#   inputs:
#     command: custom
#     custom: nuget
#     arguments: |
#       push $(Build.ArtifactStagingDirectory)/*.nupkg \
#       --source "https://pkgs.dev.azure.com/kweason69/MSLearn-SpaceGame-Dependencies/_packaging/Tailspin.SpaceGame.Web.Models/nuget/v3/index.json" \
#       --api-key $(ADO_PAT_NUGET)
#   env:
#     ADO_PAT_NUGET: $(ADO_PAT_NUGET)    
 
# - task: NuGetCommand@2
#   displayName: 'Publish NuGet package'
#   inputs:
#     command: push
#     feedPublish: '$(System.TeamProject)/Tailspin.SpaceGame.Web.Models'
#     allowPackageConflicts: true
#   condition: succeeded()
